[project]
name = "MetamaterialsWithJulia"
uuid = "a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6"
authors = ["Your Name <you@email.com>"]
version = "2.0.0"
description = "A robust and extensible framework for simulating and optimizing metamaterials in Julia."

[deps]
# --- Core Dependencies for Physics and Numerics ---
Gridap = "56d4f2e9-7ea1-5842-9d69-eebd1a2c89a9"       # Finite Element Method (FEM) core
GridapGmsh = "42a157b4-3929-11e9-2849-5349281a3803" # Gmsh integration for Gridap
Gmsh = "603e54b6-28a6-11e9-2915-251e6074a3de"       # For importing complex meshes
FFTW = "7a1cc6ca-52ef-59f5-83cd-3a7055c09341"       # Fast Fourier Transforms

# --- Optimization ---
Optim = "429524aa-4258-5aef-a3af-852621145aeb"             # Gradient-based optimization
ForwardDiff = "f6369f11-7733-5829-9624-2e633ac7151f"   # Automatic Differentiation
BlackBoxOptim = "a134a8b2-14d6-55f6-9291-3336d3ab0209" # Black-box optimization (genetic algos, etc.)

# --- Utilities ---
TOML = "fa267f1f-6049-4f14-aa54-33baf5362a33"         # For reading .toml config files
HDF5 = "f67ccb44-e63f-5c2f-98bd-6dc0ccc4ba2f"         # For saving results in a standard format
JLD2 = "033835bb-8acc-5ee8-8aae-3f567f8a3819"         # Julia-specific data format
Plots = "91a5bcdd-55d7-5caf-9e0b-520d859cae80"        # Plotting library

# --- Documentation ---
Documenter = "e30172f5-a6a5-5a46-863b-614d45cd2de4"   # For generating documentation

[compat]
julia = "1.10"
